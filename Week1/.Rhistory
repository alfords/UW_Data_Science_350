install.packages("plyr")
install.packages("ggplot2")
g = rnorm(10,5)
plot(g)
pwd()
getwd()
install.packages("UsingR")
ls -l
exit()
install.packages(c("boot", "class", "cluster", "codetools", "colorspace", "evaluate", "foreign", "formatR", "Formula", "ggplot2", "highr", "Hmisc", "jsonlite", "KernSmooth", "knitr", "lattice", "manipulate", "markdown", "MASS", "Matrix", "mgcv", "mime", "nlme", "nnet", "plyr", "Rcpp", "RCurl", "rpart", "spatial", "stringr", "survival"))
library(data.table)
library(logging)
library(RSQLite)
install.packages("data.table", "logging", "RSQLite")
install.packages("data.table")
install.packages('logging')
install.packages(RSQLite)
install.packages("RSQLite")
library(data.table)
library(logging)
library(RSQLite)
list.dirs
A_matrix = matrix(4, nrow=4, ncol=3) # Makes use of broadcasting
View(A_matrix)
B_matrix = matrix(1:50, nrow=4, ncol=3)
View(B_matrix)
A_matrix + B_matrix
A_matrix * B_matrix
A_matrix %*% B_matrix
A_matrix %*% t(B_matrix)
x_values = seq(from=as.Date('2015-01-01'),
to=as.Date('2015-02-12'),
by = 3)
df = data.frame('dates' = x_values,
'x1'    = runif(15,-10,20),
'x2'    = 1:15,
'x3'    = strsplit('MississippiMath','')[[1]])
View(df)
df$x3 = as.character(df$x3)
df$x3 = tolower(df$x3)
View(df)
str(df)
head(df)
tail(df, n=10)
df = as.data.table(df)
View(df)
df[,sum(x1)]
df[,c(sum(x1),sd(x2))]
?logging
x_values
install.packages("XML")
nfl_site = "http://www.usatoday.com/sports/nfl/arrests/"
nfl_html = readHTMLTable(nfl_site)
nfl_site = "http://www.usatoday.com/sports/nfl/arrests/"
library(XML)
nfl_html = readHTMLTable(nfl_site)
nfl_html = readHTMLTable(nfl_site)
nfl_html
nfl_data = nfl_html[[1]]
nfl_html
db_file = 'test_db.db'
conn = dbConnect(dbDriver("SQLite"), dbname=db_file)
dbWriteTable(conn, 'table_name', medals_data, overwrite=TRUE)
medals_data <- read.table("medals.txt", sep="\t", header=TRUE)
p = 0.75
n = 1000
?rbinom
bern_samples = rbinom(n, 1, p)
bern_sample_mean = sum(bern_samples)/length(bern_samples)
bern_sample_var = bern_sample_mean * (1-bern_sample_mean)
##--------------------------------------------
##
## Exploring Data in R (lecture 1)
##
## Class: PCE Data Science Methods Class
##
## Contains examples of:
##
## -Working with Distributions
##
## -Visually/Numerically Exploring data
##
##--------------------------------------------
##-----Exploring data Visually----
# Bernoulli (Binomial with n = 1)
p = 0.75
n = 1000
bern_samples = rbinom(n, 1, p)
bern_sample_mean = sum(bern_samples)/length(bern_samples)
bern_sample_var = bern_sample_mean * (1-bern_sample_mean)
bern_var = p*(1-p)
# Binomial
N = c(5, 25, 75)
binom_samples = lapply(N, function(x) rbinom(n, x, p))
binom_sample_means = lapply(binom_samples, mean)
binom_means = N*p
binom_sample_vars = lapply(binom_samples, var)
binom_vars = N*p*(1-p)
par(mfrow=c(2,2))
for (i in 1:3){
hist(binom_samples[[i]], main=paste(N[i],'Experiments'), freq=FALSE)
x_norm = seq(0,N[i], by = 0.025)
y_norm = dnorm(x_norm, mean=binom_means[i], sd=sqrt(binom_vars[i]))
lines(x_norm, y_norm)
}
#============================================
#  Aleksey Kramer
#  Data Science 350
#  Week 1 - Homework
#============================================
library(logging)
if (interactive()) {
# Read the file and set DateFormat as Date
file = read.csv("JitteredHeadCount.csv")
file$DateFormat = as.POSIXct(file$DateFormat, format="%m/%d/%Y")
file$DateFormat <- as.Date(file$DateFormat)
# (1) Compare Weekend vs. Weekday Head Counts
weekend <- file[file$DayOfWeek > 5, ]
workweek <- file[file$DayOfWeek < 6,]
summary(weekend)
summary(workweek)
m_weekend <- mean(weekend$HeadCount)
m_workweek <- mean(workweek$HeadCount)
# (1) Headcount is 25% higher (on average) on weekends vs. that during the weekdays
print("Headcount is 25% higher (on average) on weekends vs. that during the weekdays")
print(1 - m_workweek / m_weekend)
# (2) Compare Table Occupancy Weekday vs. WorkWeek
m_weekend <- mean(weekend$TablesOpen)
m_workweek <- mean(workweek$TablesOpen)
# (2) There are 2% (on avarage) less tables opened during the workweek vs. that of a weekend
print("There are 2% (on avarage) less tables opened during the workweek vs. that of a weekend")
print(1 - m_workweek / m_weekend)
# (3) Explore Occupancy Per Hour on Weekends, Weekdays, and overall
plot(file$HeadCount ~ file$Hour, data = weekend, type = "h", main="Weekend Head Count per Hour")
plot(file$HeadCount ~ file$Hour, data = workweek, type = "h", main="Weekdays Head Count per Hour")
plot(file$HeadCount ~ file$Hour, data = file, type = "h", main="Total Head Count per Hour")
total_peak <- file[file$Hour < 5 | file$Hour > 12,]
total_low <- file[file$Hour > 4 & file$Hour < 13,]
total_peak <- mean(total_peak$HeadCount)
total_low <- mean(total_low$HeadCount)
# (3) There is a 69% difference in head count between peak times and low times in the casino
#     The peak time starts around 2:00PM and ends around 5:00AM on throughout the week (workdays and weekends)
print("There is a 69% difference in head count between peak times ( 1:00 PM to 4:00AM) and low times (5:00AM to 12:00PM)")
print(1 - total_low / total_peak)
# (4) Exploring most popular games played during workweek vs. those played during weekend
# The most populare games are CR, S6, and TP on weekends and during workdays
plot(weekend$HeadCount~weekend$GameCode, type="h", main="Head Count by Game code on Weekends")
plot(workweek$HeadCount~workweek$GameCode, type="h", main="Head Count by Game code during Workweek")
# (4) Isolating weekend headcount per popular game
weekend.CR <- weekend$HeadCount[weekend$GameCode == 'CR']
weekend.S6 <- weekend$HeadCount[weekend$GameCode == 'S6']
weekend.TP <- weekend$HeadCount[weekend$GameCode == 'TP']
# (4) Isolating workday headcount per popular game
workweek.CR <- workweek$HeadCount[workweek$GameCode == 'CR']
workweek.S6 <- workweek$HeadCount[workweek$GameCode == 'S6']
workweek.TP <- workweek$HeadCount[workweek$GameCode == 'TP']
# (4) There are 31% more CR players on weekend than there is those during weekdays
# This is by far the most popular game
print("There are 31% more CR players on weekend than there is those during weekdays")
print(1 - mean(workweek.CR) / mean(weekend.CR))
# (4) There are 25% more S6 players on weekends than those during the weekdays
print("here are 25% more S6 players on weekends than those during the weekdays")
print(1 - mean(workweek.S6) / mean(weekend.S6))
# (4) There are 25% more TP players on weekends than those during the weekdays
print("There are 25% more TP players on weekends than those during the weekdays")
print(1 - mean(workweek.TP) / mean(weekend.TP))
}
setwd("/Users/voitel/TRAINING/UW_Data_Science/UW_Data_Science_350/Week1")
#============================================
#  Aleksey Kramer
#  Data Science 350
#  Week 1 - Homework
#============================================
library(logging)
if (interactive()) {
# Read the file and set DateFormat as Date
file = read.csv("JitteredHeadCount.csv")
file$DateFormat = as.POSIXct(file$DateFormat, format="%m/%d/%Y")
file$DateFormat <- as.Date(file$DateFormat)
# (1) Compare Weekend vs. Weekday Head Counts
weekend <- file[file$DayOfWeek > 5, ]
workweek <- file[file$DayOfWeek < 6,]
summary(weekend)
summary(workweek)
m_weekend <- mean(weekend$HeadCount)
m_workweek <- mean(workweek$HeadCount)
# (1) Headcount is 25% higher (on average) on weekends vs. that during the weekdays
print("Headcount is 25% higher (on average) on weekends vs. that during the weekdays")
print(1 - m_workweek / m_weekend)
# (2) Compare Table Occupancy Weekday vs. WorkWeek
m_weekend <- mean(weekend$TablesOpen)
m_workweek <- mean(workweek$TablesOpen)
# (2) There are 2% (on avarage) less tables opened during the workweek vs. that of a weekend
print("There are 2% (on avarage) less tables opened during the workweek vs. that of a weekend")
print(1 - m_workweek / m_weekend)
# (3) Explore Occupancy Per Hour on Weekends, Weekdays, and overall
plot(file$HeadCount ~ file$Hour, data = weekend, type = "h", main="Weekend Head Count per Hour")
plot(file$HeadCount ~ file$Hour, data = workweek, type = "h", main="Weekdays Head Count per Hour")
plot(file$HeadCount ~ file$Hour, data = file, type = "h", main="Total Head Count per Hour")
total_peak <- file[file$Hour < 5 | file$Hour > 12,]
total_low <- file[file$Hour > 4 & file$Hour < 13,]
total_peak <- mean(total_peak$HeadCount)
total_low <- mean(total_low$HeadCount)
# (3) There is a 69% difference in head count between peak times and low times in the casino
#     The peak time starts around 2:00PM and ends around 5:00AM on throughout the week (workdays and weekends)
print("There is a 69% difference in head count between peak times ( 1:00 PM to 4:00AM) and low times (5:00AM to 12:00PM)")
print(1 - total_low / total_peak)
# (4) Exploring most popular games played during workweek vs. those played during weekend
# The most populare games are CR, S6, and TP on weekends and during workdays
plot(weekend$HeadCount~weekend$GameCode, type="h", main="Head Count by Game code on Weekends")
plot(workweek$HeadCount~workweek$GameCode, type="h", main="Head Count by Game code during Workweek")
# (4) Isolating weekend headcount per popular game
weekend.CR <- weekend$HeadCount[weekend$GameCode == 'CR']
weekend.S6 <- weekend$HeadCount[weekend$GameCode == 'S6']
weekend.TP <- weekend$HeadCount[weekend$GameCode == 'TP']
# (4) Isolating workday headcount per popular game
workweek.CR <- workweek$HeadCount[workweek$GameCode == 'CR']
workweek.S6 <- workweek$HeadCount[workweek$GameCode == 'S6']
workweek.TP <- workweek$HeadCount[workweek$GameCode == 'TP']
# (4) There are 31% more CR players on weekend than there is those during weekdays
# This is by far the most popular game
print("There are 31% more CR players on weekend than there is those during weekdays")
print(1 - mean(workweek.CR) / mean(weekend.CR))
# (4) There are 25% more S6 players on weekends than those during the weekdays
print("here are 25% more S6 players on weekends than those during the weekdays")
print(1 - mean(workweek.S6) / mean(weekend.S6))
# (4) There are 25% more TP players on weekends than those during the weekdays
print("There are 25% more TP players on weekends than those during the weekdays")
print(1 - mean(workweek.TP) / mean(weekend.TP))
}
